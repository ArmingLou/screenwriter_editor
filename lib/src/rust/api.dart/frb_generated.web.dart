// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.10.0.

// ignore_for_file: unused_import, unused_element, unnecessary_import, duplicate_ignore, invalid_use_of_internal_member, annotate_overrides, non_constant_identifier_names, curly_braces_in_flow_control_structures, prefer_const_literals_to_create_immutables, unused_field


// Static analysis wrongly picks the IO variant, thus ignore this
// ignore_for_file: argument_type_not_assignable

import 'api/docx_export.dart';
import 'api/simple.dart';
import 'dart:async';
import 'dart:convert';
import 'frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated_web.dart';




                abstract class RustLibApiImplPlatform extends BaseApiImpl<RustLibWire> {
                  RustLibApiImplPlatform({
                    required super.handler,
                    required super.wire,
                    required super.generalizedFrbRustBinding,
                    required super.portManager,
                  });

                  

                  @protected String dco_decode_String(dynamic raw);

@protected bool dco_decode_bool(dynamic raw);

@protected SimpleConf dco_decode_box_autoadd_simple_conf(dynamic raw);

@protected ExportResult dco_decode_export_result(dynamic raw);

@protected int dco_decode_i_32(dynamic raw);

@protected Uint8List dco_decode_list_prim_u_8_strict(dynamic raw);

@protected String? dco_decode_opt_String(dynamic raw);

@protected SimpleConf? dco_decode_opt_box_autoadd_simple_conf(dynamic raw);

@protected ParseResult dco_decode_parse_result(dynamic raw);

@protected SimpleConf dco_decode_simple_conf(dynamic raw);

@protected int dco_decode_u_8(dynamic raw);

@protected void dco_decode_unit(dynamic raw);

@protected String sse_decode_String(SseDeserializer deserializer);

@protected bool sse_decode_bool(SseDeserializer deserializer);

@protected SimpleConf sse_decode_box_autoadd_simple_conf(SseDeserializer deserializer);

@protected ExportResult sse_decode_export_result(SseDeserializer deserializer);

@protected int sse_decode_i_32(SseDeserializer deserializer);

@protected Uint8List sse_decode_list_prim_u_8_strict(SseDeserializer deserializer);

@protected String? sse_decode_opt_String(SseDeserializer deserializer);

@protected SimpleConf? sse_decode_opt_box_autoadd_simple_conf(SseDeserializer deserializer);

@protected ParseResult sse_decode_parse_result(SseDeserializer deserializer);

@protected SimpleConf sse_decode_simple_conf(SseDeserializer deserializer);

@protected int sse_decode_u_8(SseDeserializer deserializer);

@protected void sse_decode_unit(SseDeserializer deserializer);

@protected void sse_encode_String(String self, SseSerializer serializer);

@protected void sse_encode_bool(bool self, SseSerializer serializer);

@protected void sse_encode_box_autoadd_simple_conf(SimpleConf self, SseSerializer serializer);

@protected void sse_encode_export_result(ExportResult self, SseSerializer serializer);

@protected void sse_encode_i_32(int self, SseSerializer serializer);

@protected void sse_encode_list_prim_u_8_strict(Uint8List self, SseSerializer serializer);

@protected void sse_encode_opt_String(String? self, SseSerializer serializer);

@protected void sse_encode_opt_box_autoadd_simple_conf(SimpleConf? self, SseSerializer serializer);

@protected void sse_encode_parse_result(ParseResult self, SseSerializer serializer);

@protected void sse_encode_simple_conf(SimpleConf self, SseSerializer serializer);

@protected void sse_encode_u_8(int self, SseSerializer serializer);

@protected void sse_encode_unit(void self, SseSerializer serializer);
                }
                


// Section: wire_class

class RustLibWire implements BaseWire {
            RustLibWire.fromExternalLibrary(ExternalLibrary lib);

            
        }
        @JS('wasm_bindgen') external RustLibWasmModule get wasmModule;

        @JS() @anonymous extension type RustLibWasmModule._(JSObject _) implements JSObject {
            
        }
        